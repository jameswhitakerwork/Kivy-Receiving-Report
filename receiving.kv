#: import main main

ReceivingRoot:

<ReceivingRoot>:
#1
	Tabs

<Tabs>:
#2
	do_default_tab: False
	id: tabs
	cl: currentlist

#	TabbedPanelItem:
#	#3
#		text: 'Menu'
#		BoxLayout:
		#4
#			MainMenu


	TabbedPanelItem:
	#3
		text: 'Add Items'
		Add_Items_Tab

	TabbedPanelItem:
		text: 'Current Items'
		Current_List_Tab:
			id: currentlist


<MainMenu>:
#5
	orientation: 'vertical'
	Button:
		text: 'Refresh Items List'
		on_release: app.root.loading_popup()
		on_release: app.root.refresh_items()

	Button:
		text: 'View Reports'
		on_release: app.root.items_test()

<Loading_Popup>:
	title: 'Loading...' 
	Button:
		text: 'close'
		on_release: root.dismiss

<Add_Items_Tab>:
#4
	id: additemstab
	orientation: 'vertical'

	Search_Bar

	Item_Scroller

<Current_List_Tab>:
	Current_Scroller

<Current_Scroller>:
	Current_List:
		id: currentlist
		cols: 1
		width: root.width
		size_hint: (None, None)

<Current_List>:
	orientation: 'vertical'
	cols: 1
#	size_x: root.width
	size_hint: (None, None)



<Current_Selector>:
	size_hint_y: None
	size_y: '40dp'
	orientation: 'horizontal'
	id: selector
	label: label
	Label:
		size_hint_x: 0.76
		id: label
		text: 'Label'
	Button:
		size_hint_x: 0.12
		text: 'Delete'
		on_release: 
			self.parent.parent.remove_widget(selector)
			self.parent.remove_item_on_delete()


<Search_Bar>:
#5
#Parent: Add_Items_Tab
	orientation: 'horizontal'
	size_hint_y: 0.1
	search_input: search_box

	Button:
		size_hint_x: 0.25
		text: 'Refresh Items'
		on_release: app.root.refresh_items()


	Button:
		size_hint_x: 0.25
		text: 'Search'
		on_release: self.parent.parent.children[0].children[0].item_search(search_box.text)

	TextInput:
		id: search_box
		size_hint_x: 0.75
		multiline: False
		on_text_validate: self.parent.parent.children[0].children[0].item_search(self.text)

<Item_Scroller>:
#5
#parent: Add_Items_Tab
	id: itemscroller

	Item_List:
		id: itemlist
		cols: 1
		width: root.width
		size_hint: (None, None)

<Item_List>:
#6
#parent: Item_Scroller
	id: itemlist

<Item_Selector>:
#7
#parent: Item_List
	label: label
	orientation: 'vertical'
	size_hint_y: None
	size_y: '40dp'
#	size_hint: (None, None)

	Label:
		id: label
		text: '*'
		text_size: root.width, None
		size: self.texture_size
		size_hint_y: 0.1

	BoxLayout:
		size_y: "5dp"
		size_hint_y: 0.1
		orientation: 'horizontal'
		Item_Slider:
			size_hint_x: 0.75
			id: slider
			step: 1
			range: (0, 100)
			value: int(textinput.text)
			secretvalue: int(textinput.text)

		BoxLayout:
			size_hint_x: 0.2
			TextInput:
				id: textinput
				multiline: False
				size_hint_x: 0.1
				text: str(int(slider.value))
				on_text_validate:
					self.parent.parent.parent.parent.add_item(self.parent.parent.parent.id, int(self.text))
					slider.value = 0


			Add_Button:
				size_hint_x: 0.1
				text: 'Add'
				on_release: 
					self.parent.parent.parent.parent.add_item(self.parent.parent.parent.id, int(textinput.text))
					slider.value = 0
					self.change_colour(self)

<Added_Bubble>:
	BubbleButton:
		text: 'test'



<GridLayout>:
	canvas:
		Color:
			rgb: 1, 1, 0
